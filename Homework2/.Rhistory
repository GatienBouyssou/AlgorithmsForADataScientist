colors <- colors[k2$cluster]
p2= plot(k2$cluster[0:20], pch = "H",col=colors[0:20])
p2=p2+points(k2$cluster[21:40], pch="D",col=colors[21:40])
colors <- c('red','green')
colors <- colors[k2$cluster]
p2= plot(k2$cluster[0:20], pch = "H",col=colors[0:20])
p2=p2+plot(k2$cluster[21:40], pch="D",col=colors[21:40])
colors <- c('red','green')
colors <- colors[k2$cluster]
p2= plot(pca_plot$x[,1:2], type = "n") + plot(k2$cluster[0:20], pch = "H",col=colors[0:20])
p2=p2+plot(k2$cluster[21:40], pch="D",col=colors[21:40])
colors <- c('red','green')
colors <- colors[k2$cluster]
p2= plot(pca_plot$x[,1:2], type = "n") + plot(k2$cluster[0:20], pch = "H",col=colors[0:20])+plot(k2$cluster[21:40], pch="D",col=colors[21:40])
colors <- c('red','green')
colors <- colors[k2$cluster]
p2= plot(x,
col=(k2$cluster+1),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=20, cex=2)
colors <- c('red','green')
colors <- colors[k2$cluster]
p2= plot(genematrix,
col=(k2$cluster+1),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=20, cex=2)
p2= plot(genematrix,
col=(k2$cluster+1),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=20, cex=2)
k2 <- kmeans(genematrix, centers = 2, nstart = 15)
k2$cluster
p2= plot(genematrix,
col=(k2$cluster+1),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=20, cex=2)
p2= plot(genematrix,
col=(k2$cluster+1),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=10, cex=2)
p2= plot(genematrix,
col=(k2$cluster+1),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=1, cex=2)
p2= plot(genematrix,
col=(k2$cluster+1),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=15, cex=2)
p2= plot(genematrix,
col=(k2$cluster),
main="K-Means Clustering Results with K=2",
xlab="", ylab="", pch=15, cex=2)
k2 <- kmeans(genematrix, centers = 2, nstart = 15)
k2
k2 <- kmeans(genematrix, centers = 2, nstart = 15)
k2$cluster
k2$tot.withinss
pca_plot <- prcomp(genematrix, scale=TRUE)
summary(pca_plot)
biplot(pca_plot, scale=0)
pca <- prcomp(genematrix, scale=TRUE)
summary(pca)
biplot(pca, scale=0)
pr.var=pca$sdev^2
pve=pr.var/sum(pr.var)
plot(cumsum(pve),
xlab="Principal Component",
ylab="Cumulative Proportion of Variance Explained",
ylim=c(0,1),
type='b')
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
library(reticulate)
use_python("/Library/Frameworks/Python.framework/Versions/3.6/bin/python3", required = T)
knitr::knit_engines$set(python.reticulate =  FALSE)
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
fuzzyclust <- fanny(genematrix, centers = 2, metric = "euclidean", stand = FALSE)
library(knitr)
knitr::opts_chunk$set(echo = TRUE,tidy=TRUE,message=FALSE,warning=FALSE,strip.white=TRUE,prompt=FALSE,
cache=TRUE, size="scriptsize",fig.width=4, fig.height=3)
library(reticulate)
use_python("/Library/Frameworks/Python.framework/Versions/3.6/bin/python3", required = T)
knitr::knit_engines$set(python.reticulate =  FALSE)
matplotlib <- import("matplotlib")
matplotlib$use("Agg", force = TRUE)
#install.packages("cluster")
#install.packages("xlsx")
library(magrittr)
library(knitr)
library(rmarkdown)
library(xlsx)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(ISLR)
library(readr)
library(randomForest)
library(tidyverse)
library(caret)
library(cluster)
library(factoextra)
id <- "1VfVCQvWt121UN39NXZ4aR9Dmsbj-p9OU" # google file ID
GeneData <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",id), header = F)
colnames(GeneData)[1:20] = paste(rep("H", 20), c(1:20), sep = "")
colnames(GeneData)[21:40] = paste(rep("D", 20), c(1:20), sep = "")
row.names(GeneData) = paste(rep("G", 1000), c(1:1000), sep = "")
genematrix <- t(GeneData)
pca <- prcomp(genematrix, scale=TRUE)
pr.var=pca$sdev^2
pve=pr.var/sum(pr.var)
plot(cumsum(pve),
xlab="Principal Component",
ylab="Cumulative Proportion of Variance Explained",
ylim=c(0,1),
type='b')
p=plot(pca$x[,1:2], type = "n")
p=p+points(pca$x[0:20,1:2], pch = "H", col='green')
p=p+points(pca$x[21:40,1:2], pch = "D",col='red')
fviz_nbclust(genematrix, kmeans, method = "wss") + geom_vline(xintercept = 2, linetype = 2)
k2 <- kmeans(genematrix, centers = 2, nstart = 10)
k2$cluster
fviz_cluster(k2, data = genematrix,
palette = c("#2E9FDF", "#FC4E07"), ellipse.type = "euclid", star.plot = TRUE, repel = TRUE, ggtheme = theme_minimal())
pam.res <-pam(genematrix, 2, metric = "euclidean")
pam.res$clustering
fviz_cluster(pam.res, data = genematrix,
palette = c("#2E9FDF", "#FC4E07"), ellipse.type = "euclid", star.plot = TRUE, repel = TRUE, ggtheme = theme_minimal())
c_euclidean<-dist(genematrix, method = 'euclidean')
round(as.matrix(c_euclidean)[1:10, 1:10], 1)
c_pearson <- cor(t(genematrix), method="pearson")
c_pearson <- as.dist(1-c_pearson)
round(as.matrix(c_pearson)[1:10, 1:10], 1)
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
k2$cluster
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
clusters <- hclust(c_euclidean, method = "complete")
clusterCut <- cutree(clusters, 2)
plot(clusters)
c_euclidean<-dist(genematrix, method = 'euclidean')
c_pearson <- cor(t(genematrix), method="pearson")
c_pearson <- as.dist(1-c_pearson)
#complete
clusters_complete_euclidean <- hclust(c_euclidean, method = "complete")
clusterCut <- cutree(clusters_complete_euclidean, 2)
clusters_complete_correlation <- hclust(c_pearson, method = "complete")
clusterCut <- cutree(clusters_complete_correlation, 2)
#single
clusters_single_euclidean <- hclust(c_euclidean, method = "single")
clusterCut <- cutree(clusters_single_euclidean, 2)
clusters_single_correlation <- hclust(c_pearson, method = "single")
clusterCut <- cutree(clusters_single_correlation, 2)
#average
clusters_average_euclidean <- hclust(c_euclidean, method = "average")
clusterCut <- cutree(clusters_average_euclidean, 2)
clusters_average_correlation <- hclust(c_pearson, method = "average")
clusterCut <- cutree(clusters_average_correlation, 2)
par(mfrow = c(2, 3))
plot(clusters_complete_euclidean)
plot(clusters_complete_correlation)
plot(clusters_single_euclidean)
plot(clusters_single_correlation)
plot(clusters_average_euclidean)
plot(clusters_average_correlation)
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
fuzzyclust <- fanny(genematrix, centers = 2, metric = "euclidean", stand = FALSE)
fuzzyclust <- fanny(genematrix, 2, metric = "euclidean", stand = FALSE)
fuzzyclust$clustering
fuzzyclust <- fanny(genematrix, 2, metric = "euclidean", stand = FALSE)
fuzzyclust$coeff
fuzzyclust$clustering
fuzzyclust <- fanny(genematrix, 2, metric = "euclidean", stand = FALSE)
fuzzyclust$coeff
head(fuzzyclust$clustering)
fuzzyclust <- fanny(genematrix, 2, metric = "euclidean", stand = FALSE)
fuzzyclust$coeff
fuzzyclust$clustering
fuzzyclust <- fanny(genematrix, 2, metric = "euclidean", stand = TRUE)
fuzzyclust$clustering
fuzzyclust$coeff
fuzzyclust$coeff
fviz_cluster(res.fanny, ellipse.type = "norm", repel = TRUE,
palette = "jco", ggtheme = theme_minimal(), legend = "right")
fuzzyclust$coeff
fviz_cluster(fuzzyclust, ellipse.type = "norm", repel = TRUE,
palette = "jco", ggtheme = theme_minimal(), legend = "right")
fuzzyclust$coeff
fviz_cluster(fuzzyclust, ellipse.type = "norm", repel = TRUE, palette = "jco", ggtheme = theme_minimal(), legend = "right")
fviz_cluster(fuzzyclust, ellipse.type = "norm", repel = TRUE, palette = "jco", ggtheme = theme_minimal(), legend = "right")
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
d.corona
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
head(clusterCut)
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
head(clusterCut, n=50)
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
head(clusterCut, n=100)
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
clusterCut
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
tail(clusterCut)
id <- "1CA1RPRYqU9oTIaHfSroitnWrI6WpUeBw" # google file ID
d.corona <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download",
id), header = F)
deceased = d.corona[d.corona[,1] == 1,]
row.names(deceased)[1:45] = paste(rep("D", 45), c(1:45), sep = "")
colnames(deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = d.corona[d.corona[,1] == 0,]
row.names(non_deceased)[1:1965] = paste(rep("H", 1965), c(1:1965), sep = "")
colnames(non_deceased)[1:4] = paste(rep("C", 4), c(1:4), sep = "")
non_deceased = non_deceased[1:450,]
d.corona=rbind(non_deceased,deceased)
d.corona= d.corona[,2:4]
c_daisy <- daisy(d.corona)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
tail(clusterCut, n=50)
plot(clusters)
plot(clusters)
plot(clusters)
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
k2$cluster
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
mushrooms
clusters <- hclust(c_euclidean, method = "complete")
clusterCut <- cutree(clusters, 2)
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
k2$cluster
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
clusters <- hclust(c_euclidean, method = "complete")
clusterCut <- cutree(clusters, 2)
clusterCut
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
k2$cluster
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
clusterCut
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
clusters <- hclust(c_daisy, method = "complete")
clusterCut <- cutree(clusters, 2)
clusterCut
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
clusters <- hclust(c_euclidean, method = "complete")
clusterCut <- cutree(clusters, 2)
clusterCut
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
c_pearson <- cor(t(mushrooms), method="pearson")
c_pearson <- as.dist(1-c_pearson)
clusters <- hclust(c_euclidean, method = "complete")
clusterCut <- cutree(clusters, 2)
clusterCut
mushrooms =  xlsx::read.xlsx("/Users/caro/Desktop/Master\ DNM/Pattern\ mining/Pattern\ Mining/Homework/Homework2/mushrooms.XLS", sheetIndex=1)
mushrooms_com = mushrooms[mushrooms[,7]==1,]
row.names(mushrooms_com) = paste(rep("c", 18), c(1:18), sep = "")
mushrooms_nocom = mushrooms[mushrooms[,7]==0,]
row.names(mushrooms_nocom) = paste(rep("nc", 6), c(1:6), sep = "")
mushrooms = rbind(mushrooms_com, mushrooms_nocom)
mushrooms = mushrooms[,2:6]
rows <- sample(nrow(mushrooms))
mushrooms <- mushrooms[rows, ]
k2 <- kmeans(mushrooms, centers = 2, nstart = 10)
c_euclidean<-dist(mushrooms, method = 'euclidean')
c_daisy <- daisy(mushrooms)
c_pearson <- cor(t(mushrooms), method="pearson")
c_pearson <- as.dist(1-c_pearson)
clusters <- hclust(c_pearson, method = "complete")
clusterCut <- cutree(clusters, 2)
clusterCut
#install.packages("cluster")
install.packages("fpc")
library(magrittr)
library(knitr)
library(rmarkdown)
library(xlsx)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(ISLR)
library(readr)
library(randomForest)
library(tidyverse)
library(caret)
library(cluster)
library(factoextra)
library(fpc)
#install.packages("fpc")
library(magrittr)
library(knitr)
library(rmarkdown)
library(xlsx)
library(ggplot2)
library(ggfortify)
library(MASS)
library(dplyr)
library(ISLR)
library(readr)
library(randomForest)
library(tidyverse)
library(caret)
library(cluster)
library(factoextra)
library(fpc)
km_stats <- cluster.stats(dist(genematrix), km$cluster)
km <- kmeans(genematrix, centers = 2, nstart = 10)
km$cluster
km_stats <- cluster.stats(dist(genematrix), km$cluster)
km_stats$dunn
pam <-pam(genematrix, 2, metric = "euclidean")
pam$clustering
pam_stats <- cluster.stats(dist(genematrix), pam$clustering)
pam_stats$dunn
clusters_complete_euclidean_stats <- cluster.stats(dist(genematrix), cutree(clusters_complete_euclidean, 2))
clusters_complete_euclidean_stats$dunn
clusters_stats <- cluster.stats(dist(genematrix), cutree(clusters, 2))
clusters_stats <- cluster.stats(dist(d.corona), cutree(clusters, 2))
clusters_stats <- cluster.stats(dist(d.corona, method="daisy"), cutree(clusters, 2))
clusters_stats <- cluster.stats(daisy(d.corona), cutree(clusters, 2))
clusters_stats <- cluster.stats(dist(daisy(d.corona)), cutree(clusters, 2))
clusters_stats <- cluster.stats(NULL, cutree(clusters, 2))
clusters_complete_euclidean_stats <- cluster.stats(dist(genematrix), cutree(clusters_complete_euclidean, 2))
clusters_complete_euclidean_stats$dunn
clusters_complete_euclidean_stats$clus.avg.silwidths
